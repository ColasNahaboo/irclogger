#!/bin/bash
set -a
. irclogger_cgiparse
. irclogger_common
CHAN=${PATH_INFO#/}

search="$FORM_search"
search="${search//\\\\,/,}";search="${search//\\\\;/;}"
action="$FORM_action"
opterrors="-$FORM_error"
unset chkerror;if [ -n "$FORM_error" ]; then chkerror[$FORM_error]=checked
else chkerror[0]=checked
fi
if [ -n "$FORM_verbatim" ]; then optverb="-0 -k";opterrors=
chkverbatim=checked
else optverb="";chkverbatim=
fi
if [ -n "$FORM_word" ]; then optword="-w";chkword=checked
else optword=;chkword=
fi
if [ -n "$FORM_case" ]; then optcase='';chkcase=checked
else 
  if "x$optverb" = x; then chkcase='-i'; fi
fi
STYLE=
cd $logsdir
if [ -e style.css ]; then STYLE="`cat style.css`";fi
cd $logsdir/$CHAN
if [ -e style.css ]; then STYLE="$STYLE`cat style.css`";fi

form () {
  echo "<!DOCTYPE HTML PUBLIC \"-//IETF//DTD HTML//EN\">
<html>
<head>
<title>#$CHAN irc log search</title>
<style type='text/css'> $STYLE </style>
</head>
<body>
<h1>#$CHAN irc log search</h1>
$locked
<a href='${SCRIPT_NAME%/*}/irclogger_logs/$CHAN'>&uarr;back</a>
<form>
  <input type=text name=search value='$PREVSEARCH' size=48>
  <input type=submit value=Search>
  <input type=hidden name=action value=search> by 
  <a href='http://www.tgries.de/agrep/agrephlp.html#AGREPMETASYMBOLS'>agrep</a>
  <br><i>agrep is grep with operators <b>,</b> for OR and <b>;</b> for AND
  and approximate searching.
  <br>To search when Colas said Doh!, search: </1><tt>colas;doh!</tt>
  <p>Options:<ul>
  <li><label><input type=checkbox name=case $chkcase>Case sensitive: searching
for <tt>log</tt> will not find <tt>Log</tt></label>
  <li><label><input type=checkbox name=verbatim $chkverbatim>Verbatim 
      (no approximations nor regular expressions nor operators)</label>
  <li><label><input type=checkbox name=word $chkword>Word search: Searching for \"win\"
      will not match \"wind\"</label>
  <li>Approximate match: tolerate 
      <label><input type=radio name=error value=0 ${chkerror[0]}> 0</label>
      <label><input type=radio name=error value=1 ${chkerror[1]}> 1</label>
      <label><input type=radio name=error value=2 ${chkerror[2]}> 2</label>
      <label><input type=radio name=error value=3 ${chkerror[3]}> 3</label>
      <label><input type=radio name=error value=4 ${chkerror[4]}> 4</label>
      <label><input type=radio name=error value=5 ${chkerror[5]}> 5</label>
      <label><input type=radio name=error value=6 ${chkerror[6]}> 6</label>
      <label><input type=radio name=error value=7 ${chkerror[7]}> 7</label>
    errors.
  </ul>
</form>
<hr>
$RESULTS
</body></html>"
}

main () {
  if acces_protected "$CHAN"; then locked="$private_image<p>";else locked=
  fi
  if [ "$action" = "search" ]; then
    PREVSEARCH="$search"
    if [ -n "$FORM_verbatim" ]; then
      search="${search//,/\\,}";search="${search//;/\\;}"
    fi
    expanse_compressed *.log.gz
    RESULTS=`search "$search"`
  else
    RESULTS=
  fi
  echo "Content-type: text/html"; echo ""
  form
  exit 0
}

search () {
  if ! which agrep >/dev/null; then 
    echo '<p><b style="color:red">*** ERROR: agrep not found!***</b><hr><p>'
    return
  fi
  echo '<h2>Results:</h2>'
  # for agrep, we only list uncompressed files (*.log instead of *.log*)
  agrep -n $optcase $optverb $optword $opterrors "$search" /dev/null `ls -1r *log` | ( ofile='';matches=0; files=0
    while read line; do
      file="${line%%:*}";rest="${line#*:}";num="${rest%%:*}";rest="${rest#*:}"
      num="${num// /}"
      if [ "$ofile" != "$file" ]; then echo "<br><b>${file%.log*}</b>"
	let files=files+1
      fi
      ofile="$file"
      date="${file%.log*}"
      let num1=num-4
      echo "<br>&nbsp;<a href='${SCRIPT_NAME%/*}/irclogger_log/$CHAN?date=${date}&sel=$num#l$num1'>$num</a>&nbsp;<small>"
      echo "$rest"|sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g'
      echo "</small>"
      let matches=matches+1
    done
    echo "<hr><b>$matches</b> matches in $files files"
    )
}

# if there exists compressed files, create a dir with uncompressed files and 
# go there
expanse_compressed () {
  if [ "$1" != "*.log.gz" ]; then
    local ED=$logsdir/.exp/$CHAN
    if [ ! -d $ED ]; then
      local i
      mkdir $ED
      ln *.log $ED
      for i in *.log.gz; do gzip -d <$i >$ED/"${i%.gz}"
      done
      trap 1 ''; (sleep 3600; rm -rf $ED) &
    fi
    cd $ED
  fi
}

main
### EMACS MODES
### Local Variables: ***
### mode:ksh ***
### End: ***
